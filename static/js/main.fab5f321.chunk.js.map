{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","App_Header","App_Body","Component","Header","xmlns","viewBox","className","alt","d","App_ContactGlyphs","React","ContactGlyphs","href","rel","target","Body","App_Aside","App_Content","Aside","App_SkillWall","SkillWall","App_SkillBricks","App_SkillDescription","updateText","skill","desc","exp","this","_setState","SkillBricks","skillComponents","Skills","map","oSkill","iKey","data-desc","data-exp","key","onClick","e","oEvent","textContent","dataset","name","SkillDescription","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_initState","state","bind","assertThisInitialized","setState","oState","newState","iSkillExp","sSkill","sSkillDesc","_renderExperienceSpan","Content","ExperienceContent","Experience","section","App_ExperienceItem","entry","ExperienceItem","sCompany","sTag","App_ReadMoreLink","company","tag","oEntry","sTitle","title","sEndDate","endDate","sStartDate","startDate","bReadMore","description","paragraph","App_ExperienceHeadings","_renderReadMoreLink","ExperienceHeadings","_renderCompany","_renderTitle","_renderEndDate","_renderStartDate","ReadMoreLink","concat","_getLink","class","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fab5f321.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Skills from \"./data/skills.json\";\nimport Experience from \"./data/experience.json\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n          <Header/>\n          <Body/>\n      </div>\n    );\n  }\n}\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <h1>Leon Hassan</h1>\n        <p>Leon is currently working as a lead front-end developer at Capgemini, trying to make your average enterprise software a little less painful and a lot more modern. </p>\n        <p>If you would like to get in touch, reach out via the below links or email <strong>me<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"icon\" alt=\"at symbol\"><title>@</title><desc>at symbol</desc><path className=\"icon-secondary\" d=\"M15.6 15.47A4.99 4.99 0 0 1 7 12a5 5 0 0 1 10 0v1.5a1.5 1.5 0 1 0 3 0V12a8 8 0 1 0-4.94 7.4 1 1 0 1 1 .77 1.84A10 10 0 1 1 22 12v1.5a3.5 3.5 0 0 1-6.4 1.97zM12 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"></path></svg>leonhassan.co.uk</strong>.</p>\n        <ContactGlyphs/>\n      </header>\n    ); // TODO: add blog nav-button to top-right of header\n  }\n}\n\nclass ContactGlyphs extends Header {\n  render() {\n    return (\n      <div className=\"glyphs\">\n        <span>\n          <a href=\"https://github.com/Leoooob/\" rel=\"noopener noreferrer\" target=\"_blank\">\n            GitHub<span className=\"print-only-view\">: Leoooob</span>\n          </a>\n        </span>\n        <span>\n          <a href=\"https://twitter.com/Consulting_LH/\" rel=\"noopener noreferrer\" target=\"_blank\">\n            Twitter<span className=\"print-only-view\">: Consulting_LH</span>\n          </a>\n        </span>\n        <span>\n          <a href=\"https://blog.leonhassan.co.uk/\" rel=\"noopener noreferrer\" target=\"_blank\">\n            Blog<span className=\"print-only-view\">.leonhassan.dev</span>\n          </a>\n        </span>\n        <span>\n          <a href=\"https://www.linkedin.com/in/leonhassan/\" rel=\"noopener noreferrer\" target=\"_blank\">\n            LinkedIn<span className=\"print-only-view\">: leonhassan</span>\n          </a>\n        </span>\n      </div>\n    );\n    // TODO: ADD GLYPHS FOR GITHUB, TWITTER, LINKEDIN AND EMAIL\n  }\n}\n\nclass Body extends React.Component {\n  render() {\n    return (\n      <div className=\"main-content\">\n        <Aside/>\n        <Content/>\n      </div>\n    );\n  }\n}\n\nclass Aside extends React.Component {\n  render() {\n    return (\n      <aside>\n        <div className=\"location\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"icon\"><path className=\"icon-primary\" d=\"M5.64 16.36a9 9 0 1 1 12.72 0l-5.65 5.66a1 1 0 0 1-1.42 0l-5.65-5.66zM12 13a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/><path className=\"icon-secondary\" d=\"M12 1a9 9 0 0 1 6.36 15.36l-5.65 5.66a1 1 0 0 1-.71.3V13a3 3 0 0 0 0-6V1z\"/></svg>\n          <span>Southampton, UK</span>\n        </div>\n        <h2>Skills Wall</h2>\n        <SkillWall/>\n      </aside>\n    );\n  }\n}\n\nclass SkillWall extends React.Component {\n  render() {\n    return (\n      <div className=\"skill-wall\">\n        <SkillBricks />\n        <SkillDescription />\n      </div>\n    );\n  }\n}\n\nfunction updateText(skill, desc, exp) {\n  this._setState({skill, desc, exp});\n}\n\nclass SkillBricks extends SkillWall {\n  render() {\n    let skillComponents = Skills.map(function(oSkill, iKey) {\n      function onClickUpdateText(oEvent) {\n        let sSkill = oEvent.target.textContent;\n        let sDesc = oEvent.target.dataset.desc;\n        let iExp = oEvent.target.dataset.exp;\n        \n        updateText(sSkill, sDesc, iExp);\n      }\n      return <li data-desc={oSkill.desc} data-exp={oSkill.exp} key={iKey} onClick={(e) => onClickUpdateText(e)}>{oSkill.name}</li>;\n    });\n    \n    return <ul className=\"skills-list\">{skillComponents}</ul>;\n  }\n}\n\nclass SkillDescription extends SkillWall {\n  constructor(props) {\n    super(props);\n    \n    this._initState = {\n      exp: 0,\n      skill: \"Skill Description\",\n      desc: \"Click on a skill for some more information.\"\n    };\n\n    this.state = this._initState;\n\n    // eslint-disable-next-line\n    updateText = updateText.bind(this);\n  }\n\n  _resetState() {\n    this.setState(this._initState);\n  }\n\n  _setState(oState) {\n    let newState = (oState.skill === this.state.skill) ? this._initState : oState;\n    this.setState(newState);\n  }\n\n  _renderExperienceSpan(iSkillExp) {\n    if (iSkillExp > 0) {\n      return <span>{iSkillExp} years exp</span>;\n    }\n  }\n\n  render() {\n    let sSkill = this.state.skill;\n    let sSkillDesc = this.state.desc;\n    let iSkillExp = this.state.exp;\n\n    return (\n      <div className=\"skill-description\">\n        <h3>{sSkill}</h3>\n        <p>{sSkillDesc}</p>\n        {this._renderExperienceSpan(iSkillExp)}\n      </div>\n    );\n  }\n}\n\nclass Content extends React.Component {\n  render() {\n    let ExperienceContent = Experience.map(function(section, iKey) {\n      return <ExperienceItem key={iKey} entry={section} />;\n    });\n\n    return (\n      <main>\n        <h2>Experience</h2>\n        {ExperienceContent}\n      </main>\n    );\n  }\n}\n\nclass ExperienceItem extends Content {\n  _renderReadMoreLink(sCompany, sTag) {\n    return <ReadMoreLink company={sCompany} tag={sTag} />;\n  }\n\n  render() {\n    var oEntry = this.props.entry;\n    var sCompany = oEntry.company;\n    var sTitle = oEntry.title;\n    var sEndDate = oEntry.endDate;\n    var sStartDate = oEntry.startDate;\n    var bReadMore = oEntry.bReadMore;\n    var sTag = oEntry.tag;\n    var aDescription = oEntry.description;\n\n    var description = aDescription.map(function(paragraph, iKey) {\n      return <p key={iKey}>{paragraph}</p>;\n    });\n\n    return (\n      <section>\n        <ExperienceHeadings company={sCompany} title={sTitle} endDate={sEndDate} startDate={sStartDate} />\n        {description}\n        {(bReadMore) ? this._renderReadMoreLink(sCompany, sTag) : null}\n        <hr />\n      </section>\n    );\n  }\n}\n\nclass ExperienceHeadings extends Content {\n  _renderCompany() {\n    return <h3>{this.props.company}</h3>;\n  }\n\n  _renderTitle() {\n    return <h4>{this.props.title}</h4>;\n  }\n\n  _renderEndDate() {\n    return <span>{this.props.endDate ? this.props.endDate : \"Present\"}</span>;\n  }\n\n  _renderStartDate() {\n    return <span>{this.props.startDate}</span>;\n  }\n\n  render() {\n    return (\n      <div className=\"headings\">\n        {this._renderCompany()}\n        {this._renderTitle()}\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"icon\"><path className=\"icon-primary\" d=\"M5 4h14a2 2 0 0 1 2 2v13a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6c0-1.1.9-2 2-2zm0 5v10h14V9H5z\"/><path className=\"icon-secondary\" d=\"M7 2a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0V3a1 1 0 0 1 1-1zm10 0a1 1 0 0 1 1 1v3a1 1 0 0 1-2 0V3a1 1 0 0 1 1-1z\"/></svg>\n        {this._renderEndDate()}\n        {this._renderStartDate()}\n      </div>\n    );\n  }\n}\n\nclass ReadMoreLink extends Content {\n  _getLink() {\n    const link = `https://blog.leonhassan.co.uk/tag/${this.props.tag}/`;\n    return link;\n  }\n\n  render() {\n    return (\n      <div className=\"read-more\">\n        <a href={this._getLink()} rel=\"noopener noreferrer\" target=\"_blank\">\n          <span class=\"web-text\">{`Read more about my experience at ${this.props.company} here`}</span>\n          <span class=\"print-only-view\">{`Read more at ${this._getLink()}`}</span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"icon\"><path className=\"icon-primary\" d=\"M12 8a1 1 0 0 1-1 1H5v10h10v-6a1 1 0 0 1 2 0v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9c0-1.1.9-2 2-2h6a1 1 0 0 1 1 1z\"/><path className=\"icon-secondary\" d=\"M19 6.41L8.7 16.71a1 1 0 1 1-1.4-1.42L17.58 5H14a1 1 0 0 1 0-2h6a1 1 0 0 1 1 1v6a1 1 0 0 1-2 0V6.41z\"/></svg>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}