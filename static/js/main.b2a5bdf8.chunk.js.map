{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","App_Header","App_Body","Component","Header","className","href","rel","target","React","Body","App_Aside","App_Content","aSkills","Aside","class","xmlns","viewBox","d","App_SkillWall","skills","SkillWall","skillComponents","this","props","map","sSkill","iKey","key","Content","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b2a5bdf8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n          <Header/>\n          <Body/>\n      </div>\n    );\n  }\n}\n\nclass Header extends React.Component {\n  render() {\n     return (\n        <header>\n          <h1>Leon Hassan</h1>\n          <p>I'm currently working as a SAPUI5 & Fiori developer and trying to update your average enterprise software to be a little more modern. </p>\n          <p>If you would like to get in touch, you can find me at the below links or email <strong>me(at)leonhassan(dot)co(dot)uk</strong>.</p>\n          <div className=\"glyphs\">\n            <span>\n              <a href=\"https://github.com/Leoooob\" rel=\"noopener noreferrer\" target=\"_blank\">\n                GitHub\n              </a>\n            </span>\n            <span>\n              <a href=\"https://twitter.com/Consulting_LH/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                Twitter\n              </a>\n            </span>\n            <span>\n              <a href=\"https://www.linkedin.com/in/leonhassan/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                LinkedIn\n              </a>\n            </span>\n          </div>\n        </header>\n     );\n     // TODO: ADD GLYPHS FOR GITHUB, TWITTER, LINKEDIN AND EMAIL\n  }\n}\n\nclass Body extends React.Component {\n  render() {\n    return (\n      <div className=\"mainContent\">\n        <Aside/>\n        <Content/>\n      </div>\n    );\n  }\n}\n\nconst aSkills = [\n  \"JavaScript\",\n  \"CSS\",\n  \"HTML\",\n  \"Node.js\",\n  \"SAPUI5\",\n  \"SAP\",\n  \"Fiori\",\n  \"React\",\n  \"Vue.js\",\n  \"PWA\",\n  \"Design Thinking\",\n  \"Agile\"\n];\n\nclass Aside extends React.Component {\n  render() {\n    /* TODO: add a location glyph & Southampton, UK */\n    return (\n      <aside>\n        <div class=\"location\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"icon\"><path class=\"iconPrimary\" d=\"M5.64 16.36a9 9 0 1 1 12.72 0l-5.65 5.66a1 1 0 0 1-1.42 0l-5.65-5.66zM12 13a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/><path class=\"iconSecondary\" d=\"M12 1a9 9 0 0 1 6.36 15.36l-5.65 5.66a1 1 0 0 1-.71.3V13a3 3 0 0 0 0-6V1z\"/></svg>\n          <span>Southampton, UK</span>\n        </div>\n        <h2>Skills Wall</h2>\n        <SkillWall skills={aSkills} />\n      </aside>\n    );\n  }\n}\n\nclass SkillWall extends React.Component {\n  render() {\n      var skillComponents = this.props.skills.map(function(sSkill, iKey) {\n        return <li key={iKey}>{sSkill}</li>;\n      });\n      \n      return <ul className=\"skillsList\">{skillComponents}</ul>;\n  }\n}\n\nclass Content extends React.Component {\n  render() {\n    return (\n      <main>\n        <h2>Experience</h2>\n        <section>\n          <h3>Capgemini</h3>\n          <span>June 2017 - Present</span>\n          <p>I have worked for over a year at a secure project and I am currently the UI Development lead at this project. My responsibilities include running workshops with the client, designing & architecting Fiori solutions, developing UI5 applications, organise code reviews and run our team's daily development stand-up.</p>\n          <p>While at Capgemini I have also helped to develop a cloud automation tool for SAP systems, created standard training for those joining the SAP practice and organised a CodeJam.</p>\n          <span>You can read more about my experience with Capgemini <a href=\"https://blog.leonhassan.co.uk/tag/capgemini/\" rel=\"noopener noreferrer\" target=\"_blank\">here</a></span>\n        </section><hr/>\n\n        <section>\n          <h3>Atebol Interactive</h3>\n          <span>June 2016 - December 2016</span>\n          <p>Atebol is a publishing company based in Aberystwyth, I worked here during my final year of university (and preceeding summer). During this time I was able to build web applications using the Angular.js framework and work closesly with a number of content-management systems such as Joomla and OpenCart.</p>\n        </section><hr/>\n\n        <section>\n          <h3>IBM</h3>\n          <span>June 2015 - June 2016 (Industral Year)</span>\n          <p>At IBM I worked as a database administrator for the DEFRA account day-to-day, in my spare time I persued my interests in the form of internal projects and hackathons. In my year at IBM I attended and won 3 hackathons, one of which I presented to the event's sponsor, Robert LeBlanc - IBM USA's Senior VP of Cloud.</p>\n          <span>You can read more about my experience with IBM <a href=\"https://blog.leonhassan.co.uk/tag/ibm/\" rel=\"noopener noreferrer\" target=\"_blank\">here</a></span>\n        </section><hr/>\n\n        <section>\n          <h3>Bottomline Technology</h3>\n          <span>June 2014 - September 2014</span>\n          <p>I worked at Bottomline as a QA Engineer and focused on introducing automated testing, specifically regression testing on new releases and features that could be plugged into the Jenkins Continuous Integration pipeline. I used RobotFramework with Python bindings to write my scripts, for the particular product I was working on I also used the Gmail API to automate some user actions prompted by emails.</p>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}